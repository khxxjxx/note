{"version":3,"sources":["store/index.ts","store/store.ts","components/List.tsx","components/Lists.tsx","components/Main.tsx","components/NoteColor.tsx","components/NotePad.tsx","components/Pad.tsx","App.tsx","index.tsx"],"names":["color","yellow","t","b","blue","green","pink","purple","gray","noteSlice","createSlice","name","initialState","note","index","reducers","addNote","state","newNote","id","Date","valueOf","title","text","undefined","coord","x","y","size","w","h","display","toggle","push","removeNote","action","filter","payload","idx","clickNote","findIdx","indexOf","splice","moveNote","find","reSizeNote","document","querySelector","clientWidth","clientHeight","minimize","maximize","addText","findNote","enter","slice","length","colorChange","persistConfig","key","storage","noteActions","actions","persistReducer","reducer","store","createStore","noteReducer","persistor","persistStore","List","props","dispatch","useDispatch","onClick","e","style","backgroundColor","Lists","notes","useSelector","className","map","Main","children","NoteColor","NotePad","W","H","padding","top","left","width","height","maxWidth","maxHeight","zIndex","onMouseDown","changeSize","window","addEventListener","mouseUpSize","removeEventListener","startX","clientX","startY","clientY","r","mouseUpNote","Object","keys","onChange","target","value","Pad","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.98a95739.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\ntype colorTyps = { [k: string]: { t: string; b: string } };\n\nexport const color: colorTyps = {\n  yellow: { t: '#fff174', b: '#faf1a0' },\n  blue: { t: '#85b0ff', b: '#b4ceff' },\n  green: { t: '#baff74', b: '#d3ffa7' },\n  pink: { t: '#f08080', b: '#f1abab' },\n  purple: { t: '#cd97ff', b: '#debcfd' },\n  gray: { t: '#aaaaaa', b: '#cacaca' },\n};\n\nexport type noteType = {\n  id: number;\n  title: string;\n  text?: string;\n  coord: { x: number; y: number };\n  size: { w: number; h: number };\n  display: string;\n  toggle: boolean;\n  color: { t: string; b: string };\n};\n\ntype stateType = {\n  note: noteType[];\n  index: number[];\n};\n\nconst initialState: stateType = {\n  note: [],\n  index: [],\n};\n\nexport const noteSlice = createSlice({\n  name: 'notes',\n  initialState,\n  reducers: {\n    addNote: state => {\n      const newNote = {\n        id: new Date().valueOf(),\n        title: '새로운 노트',\n        text: undefined,\n        coord: { x: 50, y: 50 },\n        size: { w: 200, h: 180 },\n        display: 'inline-block',\n        toggle: false,\n        color: color['pink'],\n      };\n\n      state.note.push(newNote);\n      state.index.push(newNote.id);\n    },\n    removeNote: (state, action: PayloadAction<number>) => {\n      state.note = state.note.filter(note => note.id !== action.payload);\n      state.index = state.index.filter(idx => idx !== action.payload);\n    },\n    clickNote: (state, action: PayloadAction<number>) => {\n      const findIdx = state.index.indexOf(action.payload);\n      state.index.splice(findIdx, 1);\n      state.index.push(action.payload);\n    },\n    moveNote: (\n      state,\n      action: PayloadAction<{ id: number; coord: { x: number; y: number } }>\n    ) => {\n      state.note.find(note => note.id === action.payload.id)!.coord =\n        action.payload.coord;\n    },\n    reSizeNote: (state, action: PayloadAction<number>) => {\n      const w = document.querySelector(`.note${action.payload}`)!.clientWidth;\n      const h = document.querySelector(`.note${action.payload}`)!.clientHeight;\n\n      state.note.find(note => note.id === action.payload)!.size = {\n        w: w,\n        h: h,\n      };\n    },\n    minimize: (state, action: PayloadAction<number>) => {\n      state.note.find(note => note.id === action.payload)!.display = 'none';\n    },\n    maximize: (state, action: PayloadAction<number>) => {\n      state.note.find(note => note.id === action.payload)!.display =\n        'inline-block';\n    },\n    addText: (state, action: PayloadAction<{ id: number; text: string }>) => {\n      const findNote = state.note.find(note => note.id === action.payload.id)!;\n      findNote.text = action.payload.text;\n      const enter = action.payload.text.indexOf('\\n');\n\n      if (enter !== -1) {\n        if (action.payload.text.slice(0, enter).length < 11) {\n          findNote.title = action.payload.text.slice(0, enter);\n        } else {\n          findNote.title = action.payload.text.slice(0, 10) + '...';\n        }\n      } else {\n        if (action.payload.text === '') {\n          findNote.title = '새로운 노트';\n        } else if (action.payload.text.length < 11) {\n          findNote.title = action.payload.text.slice(0, 10);\n        } else {\n          findNote.title = action.payload.text.slice(0, 10) + '...';\n        }\n      }\n    },\n    toggle: (state, action: PayloadAction<number>) => {\n      const findNote = state.note.find(note => note.id === action.payload);\n      findNote!.toggle = !findNote!.toggle;\n    },\n    colorChange: (\n      state,\n      action: PayloadAction<{ id: number; color: string }>\n    ) => {\n      state.note.find(note => note.id === action.payload.id)!.color =\n        color[action.payload.color];\n    },\n  },\n});\n\nexport const persistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const noteActions = noteSlice.actions;\n\nexport default persistReducer(persistConfig, noteSlice.reducer);\n","import { createStore } from 'redux';\nimport persistStore from 'redux-persist/es/persistStore';\nimport noteReducer from '.';\n\nexport const store = createStore(noteReducer);\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n","import { useDispatch } from 'react-redux';\nimport { noteActions, noteType } from '../store';\n\nconst List: React.FC<{ note: noteType }> = props => {\n  const dispatch = useDispatch();\n\n  const maximize = (e: any) => {\n    dispatch(noteActions.maximize(props.note.id));\n    dispatch(noteActions.clickNote(props.note.id));\n  };\n\n  return (\n    <li onClick={maximize} style={{ backgroundColor: props.note.color.t }}>\n      {props.note.title}\n    </li>\n  );\n};\n\nexport default List;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { noteActions } from '../store';\nimport { RootState } from '../store/store';\nimport List from './List';\n\nfunction Lists() {\n  const notes = useSelector((state: RootState) => state.note);\n  const dispatch = useDispatch();\n\n  const addNote = () => {\n    dispatch(noteActions.addNote());\n  };\n\n  return (\n    <div className=\"lists\">\n      <ul className=\"list\">\n        {notes.map(note => (\n          <List note={note} key={note.id} />\n        ))}\n      </ul>\n      <div className=\"add\" onClick={addNote}>\n        +\n      </div>\n    </div>\n  );\n}\n\nexport default Lists;\n","const Main: React.FC = props => {\n  return (\n    <div className=\"main\">\n      <div className=\"title\">Note</div>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Main;\n","import { noteActions } from '../store';\nimport { useDispatch } from 'react-redux';\n\nconst NoteColor: React.FC<{ color: string; id: number }> = props => {\n  const dispatch = useDispatch();\n\n  const colorChange = () => {\n    dispatch(noteActions.colorChange({ id: props.id, color: props.color }));\n  };\n\n  return <li onClick={colorChange}>{props.color}</li>;\n};\n\nexport default NoteColor;\n","import { noteType, noteActions } from '../store';\nimport { useDispatch } from 'react-redux';\nimport { ChangeEvent } from 'react';\nimport { color } from '../store';\nimport NoteColor from './NoteColor';\n\nconst NotePad: React.FC<{\n  note: noteType;\n  idx: number;\n}> = props => {\n  const dispatch = useDispatch();\n  const W = document.querySelector('.pad')?.clientWidth;\n  const H = document.querySelector('.pad')?.clientHeight;\n  const padding = 20;\n\n  const mouseDownNote = (e: React.MouseEvent<HTMLDivElement>): void => {\n    const startX: number = e.clientX;\n    const startY: number = e.clientY;\n\n    const moveNote = (e: MouseEvent): void => {\n      let x: number = props.note.coord.x + (e.clientX - startX);\n      let y: number = props.note.coord.y + (e.clientY - startY);\n\n      x <= padding && (x = padding);\n      y <= padding && (y = padding);\n\n      let r = x + props.note.size.w;\n      let b = y + props.note.size.h;\n\n      W! - padding < r && (x = W! - padding - props.note.size.w);\n      H! - padding < b && (y = H! - padding - props.note.size.h);\n\n      dispatch(\n        noteActions.moveNote({ id: props.note.id, coord: { x: x, y: y } })\n      );\n    };\n\n    const mouseUpNote = (): void => {\n      window.removeEventListener('mousemove', moveNote);\n      window.removeEventListener('mouseup', mouseUpNote);\n    };\n\n    window.addEventListener('mousemove', moveNote);\n    window.addEventListener('mouseup', mouseUpNote);\n  };\n\n  const mouseDownSize = () => {\n    dispatch(noteActions.clickNote(props.note.id));\n\n    const changeSize = () => {\n      dispatch(noteActions.reSizeNote(props.note.id));\n    };\n\n    const mouseUpSize = (): void => {\n      window.removeEventListener('mousemove', changeSize);\n      window.removeEventListener('mouseup', mouseUpSize);\n    };\n\n    window.addEventListener('mousemove', changeSize);\n    window.addEventListener('mouseup', mouseUpSize);\n  };\n\n  const removeNoteHandler = () => {\n    dispatch(noteActions.removeNote(props.note.id));\n  };\n\n  const minimizeHandler = () => {\n    dispatch(noteActions.minimize(props.note.id));\n  };\n\n  const onChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\n    dispatch(noteActions.addText({ id: props.note.id, text: e.target.value }));\n  };\n\n  const onToggle = (): void => {\n    dispatch(noteActions.toggle(props.note.id));\n  };\n\n  return (\n    <div\n      className={`note note${props.note.id}`}\n      style={{\n        top: props.note.coord.y,\n        left: props.note.coord.x,\n        width: props.note.size.w,\n        height: props.note.size.h,\n        maxWidth: W && W! - props.note.coord.x - padding,\n        maxHeight: H && H! - props.note.coord.y - padding,\n        display: props.note.display,\n        zIndex: props.idx,\n        backgroundColor: props.note.color.b,\n      }}\n      onMouseDown={mouseDownSize}>\n      <div\n        className=\"top_bar\"\n        onMouseDown={mouseDownNote}\n        style={{ backgroundColor: props.note.color.t }}>\n        <div\n          className=\"color\"\n          onClick={onToggle}\n          style={{ backgroundColor: props.note.color.b }}>\n          <div style={{ display: props.note.toggle ? 'block' : 'none' }}>\n            <ul style={{ backgroundColor: props.note.color.t }}>\n              {Object.keys(color).map((color, idx) => (\n                <NoteColor key={idx} color={color} id={props.note.id} />\n              ))}\n            </ul>\n          </div>\n        </div>\n        <div className=\"top_btn\">\n          <div onClick={minimizeHandler}>-</div>\n          <div onClick={removeNoteHandler}>x</div>\n        </div>\n      </div>\n      <textarea onChange={onChange}>{props.note.text}</textarea>\n    </div>\n  );\n};\n\nexport default NotePad;\n","import { useSelector } from 'react-redux';\nimport { RootState } from '../store/store';\nimport NotePad from './NotePad';\n\nconst Pad = () => {\n  const notes = useSelector((state: RootState) => state.note);\n  const index = useSelector((state: RootState) => state.index);\n\n  return (\n    <div className=\"pad\">\n      {notes.map(note => (\n        <NotePad note={note} key={note.id} idx={index.indexOf(note.id)} />\n      ))}\n    </div>\n  );\n};\n\nexport default Pad;\n","import React from 'react';\nimport Lists from './components/Lists';\nimport Main from './components/Main';\nimport Pad from './components/Pad';\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <Main>\n        <Lists />\n      </Main>\n      <Pad />\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './store/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}